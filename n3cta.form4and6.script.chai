/**
 * Copyright 2022 - MagabeLab (Tanzania). All Rights Reserved.
 * Author Edwin Magabe    edyma24@gmail.com
 */

/* --------------  extensions  ---------------*/

def getScriptRunnerVersion()
{
  try{
    return scriptRunnerVersion();
  } catch{
    return 1;
  }
}

def boolToString(bool b)
{
  return b ? "true" : "false";
}


def string::indexOf(string s, int start, bool caseSensitive)
{
  return strIndexOf(this,s,start,caseSensitive);
}

def string::contains(string s, bool caseSensitive)
{
  return strContains(this,s,caseSensitive);
}

def string::remove(string s,bool caseSensitive)
{
  return strRemove(this,s,caseSensitive);
}

def string::right(int n)
{
  return strRight(this,n);
}

def string::left(int n)
{
  return strLeft(this,n);
}

def string::mid(int position,int n)
{
  return strMid(this,position,n);
}

def string::length()
{
  return strLength(this);
}

def string::replace(string before, string after,bool caseSensitive)
{
  return strReplace(this,before,after,caseSensitive);
}

def string::replaceAtPosition(int position,int n, string after)
{
  return strReplaceAtPosition(this,position,n,after);
}

def string::startsWith(string str, bool caseSensitive)
{
  return strStartsWith(this,str,caseSensitive);
}

def string::endsWith(string str, bool caseSensitive)
{
  return strEndsWith(this,str,caseSensitive);
}

def string::truncate(int position)
{
  return strTruncate(this,position);
}

def string::compare(string other, bool caseSensitive)
{
  return strCompare(this,other,caseSensitive);
}

def string::split(string sep)
{
  return strSplit(this,sep);
}

def string::append(string str)
{
  return strAppend(this,str);
}

def string::prepend(string str)
{
  return strPrepend(this,str);
}

def string::isLower()
{
  return strIsLower(this);
}

def string::isUpper()
{
  return strIsUpper(this);
}

def string::isEmpty()
{
  return strIsEmpty(this);
}

def string::simplified()
{
  return strSimplified(this);
}

def string::removeAtPosition(int position,int length)
{
  return strRemoveAtPosition(this,position,length);
}

class Tag {
        def Tag(bool valid,int index,int length, string value)
        {
                this.valid = valid;
                this.index = index;
                this.length = length;
                this.value = value;
        }
   var valid;

   var index;
   var length;
   var value;
};

def string::getTag(string t)
{
        var closeTag = "</".append(t).append(">");
        var tag = Tag(false,-1,-1,"");
        var len = closeTag.length();
        var firstIndex = this.indexOf("<".append(t),0,false);
        if(firstIndex != -1){
                   var lastIndex = this.indexOf(closeTag,firstIndex + 1 , false);
                   if(lastIndex != -1) {
                   var n = (lastIndex - firstIndex) + len;
                   var value = this.mid(firstIndex,n);;
                   tag = Tag(true,firstIndex,n,value);
                   }
          }
    return tag;
}

/* -------------------------------------------------*/


/*  add filter logic inside this function  */
def filterHtml(string html) {
    var output = html;


    return output;
}

def moveMenuToTop(string menu, string type,string year , int loop) {
     var tmp = menu;
     var menuTag = Tag(false,-1,-1,"");
     
     for(var i = 0; i <= loop; ++i){
	  var tag =  tmp.getTag("RESULTS");
	  if(tag.valid){
	      var identifier = type.append(" ").append(year);
	      if(tag.value.contains(identifier,false)){
		  	menuTag = tag;
		    break;
		  } else{
		  	tmp = tmp.removeAtPosition(tag.index,tag.length);
		  }
	  } else {
	   break;
	  }
	 }
	
	if(menuTag.valid){
	   var s = "<NECTA_RESULTS>";
	   var i = menu.indexOf(s,0,false);
	   if(i != -1){
	      menu = menu.remove(menuTag.value,true);
	      //append to top
              menu = menu.replaceAtPosition(i + s.length() ,1, menuTag.value.append("<"))
	   }
	}

    return menu;
}

def updateMenu(string input){
  var output = input;
  
  //put latest release to top
  output = moveMenuToTop(output,"ACSEE","2022",2);

  return output;
}

def onUrlVisited(string  url){


}


def onShareViaSms(string  phoneNumber, string  resultsShared){



}


def onAppStarted()
{


}


def onAppExited(int status)
{


}

def runTest(string input) {
     var  output = input;

     //var output =  boolToString("chura".contains("ra",true));
     //var output =  to_string("chura".indexOf("ra",4,true));
     //var output =  "chura".remove("ra",true);
     //var output =  "chura".right(2);
     //var output =  "chura".left(2);
     //var output =  "chura".mid(2,2);
     //var output =  to_string("chura".length());
     //var output =  "chura".replace("ur","XX",true);
     //var output =  "chura".replaceAtPosition(2,2, "xxx");
     //var output =  boolToString("chura".startsWith("chv", true));
     //var output =  boolToString("chura".endsWith("ra",false));
     //var output =  to_string("chura".compare("CHURA",true));
     //var output =  stringarrayToString("chura".split("u"));
     //var output =  "qwee".append("XX");
     //var output =  "qwee".prepend("XX");
     //var output =  boolToString("qwee".isLower());
     //var output =  boolToString("qwee".isUpper());
     //var output =  boolToString("".isEmpty());
     //var output =  "   ccvvv   ".simplified();
     //var output = to_string(getScriptRunnerVersion());

      //var output  boolToString(saveData("ip2","45.55.5.41"));
      //var output = getData("ip2");
      //updateData("ip2","no-ip");
      //var output = getData("ip2");

      return output;
}
